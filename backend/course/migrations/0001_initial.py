# Generated by Django 5.2 on 2025-04-28 09:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courseMaster', '0001_initial'),
        ('department', '0001_initial'),
        ('rooms', '0001_initial'),
        ('slot', '0001_initial'),
        ('teacher', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_year', models.IntegerField(default=1, verbose_name='Course Year')),
                ('course_semester', models.IntegerField(default=1, verbose_name='Course Semester')),
                ('is_zero_credit_course', models.BooleanField(default=False, verbose_name='Is Zero Credit Course?')),
                ('lecture_hours', models.IntegerField(default=0, verbose_name='Lecture Hours')),
                ('practical_hours', models.IntegerField(default=0, verbose_name='Practical Hours')),
                ('tutorial_hours', models.IntegerField(default=0, verbose_name='Tutorial Hours')),
                ('credits', models.IntegerField(default=0, verbose_name='Course Credit')),
                ('need_assist_teacher', models.BooleanField(default=False, verbose_name='Assist teacher?')),
                ('regulation', models.CharField(max_length=50, verbose_name='Regulation')),
                ('course_type', models.CharField(choices=[('T', 'Theory'), ('L', 'Lab'), ('LoT', 'Lab And Theory')], default='T', max_length=50, verbose_name='Course Type')),
                ('elective_type', models.CharField(choices=[('NE', 'Non-Elective'), ('PE', 'Professional Elective'), ('OE', 'Open Elective')], default='NE', max_length=50, verbose_name='Elective Type')),
                ('lab_type', models.CharField(blank=True, choices=[('NULL', 'NULL'), ('TL', 'Technical Lab'), ('NTL', 'Non-Technical Lab')], default='NULL', max_length=50, null=True, verbose_name='Lab Type')),
                ('no_of_students', models.IntegerField(default=0, verbose_name='No. of students')),
                ('teaching_status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('pending', 'Pending')], default='active', max_length=50, verbose_name='Teaching Status')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courseMaster.coursemaster')),
                ('for_dept_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses_for_dept', to='department.department')),
                ('teaching_dept_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses_taught_by_dept', to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CourseResourceAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation_reason', models.TextField(blank=True, verbose_name='Allocation Reason')),
                ('allocation_date', models.DateField(auto_now_add=True, verbose_name='Allocation Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=50, verbose_name='Status')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_allocations', to='course.course')),
                ('original_dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='original_dept_allocations', to='department.department')),
                ('teaching_dept_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teaching_dept_allocations', to='department.department')),
            ],
        ),
        migrations.CreateModel(
            name='CourseRoomPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_level', models.IntegerField(default=0, verbose_name='Preference Level')),
                ('preferred_for', models.CharField(choices=[('GENERAL', 'General'), ('TL', 'Technical Lab'), ('NTL', 'Non-Technical Lab')], default='GENERAL', max_length=50, verbose_name='Preferred For')),
                ('tech_level_preference', models.CharField(choices=[('None', 'None'), ('Basic', 'Basic'), ('Advanced', 'Advanced'), ('High-tech', 'High-tech')], default='None', max_length=50, verbose_name='Tech Level Preference')),
                ('lab_type', models.CharField(blank=True, choices=[('low-end', 'Low-End - For programming and basic coding'), ('mid-end', 'Mid-End - For OS and computation-intensive subjects'), ('high-end', 'High-End - For ML, NLP, and resource-intensive subjects')], max_length=50, null=True, verbose_name='Lab Type')),
                ('lab_description', models.TextField(blank=True, null=True, verbose_name='Lab Description')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='room_preferences', to='course.course')),
                ('room_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='rooms.room')),
            ],
        ),
        migrations.CreateModel(
            name='CourseSlotPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preference_level', models.IntegerField(default=0, verbose_name='Preference Level')),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='slot_preferences', to='course.course')),
                ('slot_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='slot.slot')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherCourseAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('semester', models.IntegerField(verbose_name='Semester')),
                ('academic_year', models.IntegerField(verbose_name='Academic Year')),
                ('student_count', models.IntegerField(default=0, verbose_name='Student Count')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_assignments', to='course.course')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_assignments', to='teacher.teacher')),
            ],
            options={
                'unique_together': {('teacher', 'course', 'semester', 'academic_year')},
            },
        ),
    ]
